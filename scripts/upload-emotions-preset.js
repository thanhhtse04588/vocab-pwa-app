// Script to upload Emotions vocabulary preset to Firebase
import { initializeApp } from 'firebase/app';
import { getFirestore, collection, addDoc } from 'firebase/firestore';

const firebaseConfig = {
  apiKey: 'AIzaSyBua6fbO18kF-HlRADcuXwSPOz_OAQTLGg',
  authDomain: 'bee-vocab.firebaseapp.com',
  projectId: 'bee-vocab',
  storageBucket: 'bee-vocab.firebasestorage.app',
  messagingSenderId: '946342810871',
  appId: '1:946342810871:web:a8e12034bae521e05c6ff2',
  measurementId: 'G-9HG6TBJ8X8',
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// Emotions vocabulary preset data
const emotionsPreset = {
  id: 'emotions-oxford-010',
  name: '[The3000Oxford]-10.Emotions',
  description:
    'Essential vocabulary for emotions and feelings based on Oxford English vocabulary list',
  wordLanguage: 'en',
  meaningLanguage: 'vi',
  createdAt: new Date().toISOString(),
  isActive: true,
  words: [
    {
      word: 'emotion',
      translation: 'c·∫£m x√∫c',
      pronunciation: '/…™Ààmo ä É…ôn/',
      example: 'Emotions are important.',
      exampleTranslation: 'C·∫£m x√∫c r·∫•t quan tr·ªçng.',
    },
    {
      word: 'feeling',
      translation: 'c·∫£m gi√°c',
      pronunciation: '/ÀàfiÀêl…™≈ã/',
      example: 'I have mixed feelings.',
      exampleTranslation: 'T√¥i c√≥ c·∫£m gi√°c l·∫´n l·ªôn.',
    },
    {
      word: 'happy',
      translation: 'vui v·∫ª',
      pronunciation: '/Ààh√¶pi/',
      example: 'I am happy today.',
      exampleTranslation: 'H√¥m nay t√¥i vui v·∫ª.',
    },
    {
      word: 'sad',
      translation: 'bu·ªìn',
      pronunciation: '/s√¶d/',
      example: 'Don\'t be sad.',
      exampleTranslation: 'ƒê·ª´ng bu·ªìn.',
    },
    {
      word: 'angry',
      translation: 't·ª©c gi·∫≠n',
      pronunciation: '/Àà√¶≈ã…°ri/',
      example: 'I am angry with you.',
      exampleTranslation: 'T√¥i t·ª©c gi·∫≠n v·ªõi b·∫°n.',
    },
    {
      word: 'excited',
      translation: 'h√†o h·ª©ng',
      pronunciation: '/…™kÀàsa…™t…ôd/',
      example: 'I am excited about the trip.',
      exampleTranslation: 'T√¥i h√†o h·ª©ng v·ªÅ chuy·∫øn ƒëi.',
    },
    {
      word: 'nervous',
      translation: 'lo l·∫Øng',
      pronunciation: '/Ààn…úÀêrv…ôs/',
      example: 'I am nervous about the exam.',
      exampleTranslation: 'T√¥i lo l·∫Øng v·ªÅ k·ª≥ thi.',
    },
    {
      word: 'worried',
      translation: 'lo √¢u',
      pronunciation: '/Ààw…úÀêrid/',
      example: 'Don\'t worry.',
      exampleTranslation: 'ƒê·ª´ng lo √¢u.',
    },
    {
      word: 'afraid',
      translation: 's·ª£ h√£i',
      pronunciation: '/…ôÀàfre…™d/',
      example: 'I am afraid of spiders.',
      exampleTranslation: 'T√¥i s·ª£ nh·ªán.',
    },
    {
      word: 'scared',
      translation: 's·ª£',
      pronunciation: '/skerd/',
      example: 'I am scared of the dark.',
      exampleTranslation: 'T√¥i s·ª£ b√≥ng t·ªëi.',
    },
    {
      word: 'surprised',
      translation: 'ng·∫°c nhi√™n',
      pronunciation: '/s…ôrÀàpra…™zd/',
      example: 'I am surprised to see you.',
      exampleTranslation: 'T√¥i ng·∫°c nhi√™n khi g·∫∑p b·∫°n.',
    },
    {
      word: 'confused',
      translation: 'b·ªëi r·ªëi',
      pronunciation: '/k…ônÀàfjuÀêzd/',
      example: 'I am confused about this.',
      exampleTranslation: 'T√¥i b·ªëi r·ªëi v·ªÅ ƒëi·ªÅu n√†y.',
    },
    {
      word: 'proud',
      translation: 't·ª± h√†o',
      pronunciation: '/pra äd/',
      example: 'I am proud of you.',
      exampleTranslation: 'T√¥i t·ª± h√†o v·ªÅ b·∫°n.',
    },
    {
      word: 'ashamed',
      translation: 'x·∫•u h·ªï',
      pronunciation: '/…ôÀà Ée…™md/',
      example: 'I am ashamed of my mistake.',
      exampleTranslation: 'T√¥i x·∫•u h·ªï v·ªÅ l·ªói c·ªßa m√¨nh.',
    },
    {
      word: 'jealous',
      translation: 'ghen t·ªã',
      pronunciation: '/Ààd íel…ôs/',
      example: 'I am jealous of your success.',
      exampleTranslation: 'T√¥i ghen t·ªã v·ªõi th√†nh c√¥ng c·ªßa b·∫°n.',
    },
    {
      word: 'lonely',
      translation: 'c√¥ ƒë∆°n',
      pronunciation: '/Ààlo änli/',
      example: 'I feel lonely sometimes.',
      exampleTranslation: 'ƒê√¥i khi t√¥i c·∫£m th·∫•y c√¥ ƒë∆°n.',
    },
    {
      word: 'bored',
      translation: 'ch√°n',
      pronunciation: '/b…îÀêrd/',
      example: 'I am bored with this movie.',
      exampleTranslation: 'T√¥i ch√°n b·ªô phim n√†y.',
    },
    {
      word: 'tired',
      translation: 'm·ªát m·ªèi',
      pronunciation: '/Ààta…™…ôrd/',
      example: 'I am tired after work.',
      exampleTranslation: 'T√¥i m·ªát m·ªèi sau khi l√†m vi·ªác.',
    },
    {
      word: 'relaxed',
      translation: 'th∆∞ gi√£n',
      pronunciation: '/r…™Ààl√¶kst/',
      example: 'I feel relaxed on vacation.',
      exampleTranslation: 'T√¥i c·∫£m th·∫•y th∆∞ gi√£n trong k·ª≥ ngh·ªâ.',
    },
    {
      word: 'stressed',
      translation: 'cƒÉng th·∫≥ng',
      pronunciation: '/strest/',
      example: 'I am stressed about work.',
      exampleTranslation: 'T√¥i cƒÉng th·∫≥ng v·ªÅ c√¥ng vi·ªác.',
    },
    {
      word: 'calm',
      translation: 'b√¨nh tƒ©nh',
      pronunciation: '/k…ëÀêm/',
      example: 'Stay calm.',
      exampleTranslation: 'H√£y b√¨nh tƒ©nh.',
    },
    {
      word: 'confident',
      translation: 't·ª± tin',
      pronunciation: '/Ààk…ëÀênf…ôd…ônt/',
      example: 'I am confident in my abilities.',
      exampleTranslation: 'T√¥i t·ª± tin v√†o kh·∫£ nƒÉng c·ªßa m√¨nh.',
    },
    {
      word: 'shy',
      translation: 'nh√∫t nh√°t',
      pronunciation: '/ Éa…™/',
      example: 'She is shy around strangers.',
      exampleTranslation: 'C√¥ ·∫•y nh√∫t nh√°t v·ªõi ng∆∞·ªùi l·∫°.',
    },
    {
      word: 'brave',
      translation: 'd≈©ng c·∫£m',
      pronunciation: '/bre…™v/',
      example: 'You are very brave.',
      exampleTranslation: 'B·∫°n r·∫•t d≈©ng c·∫£m.',
    },
    {
      word: 'love',
      translation: 'y√™u',
      pronunciation: '/l åv/',
      example: 'I love my family.',
      exampleTranslation: 'T√¥i y√™u gia ƒë√¨nh c·ªßa t√¥i.',
    },
  ],
};

// Function to convert word data to PublicVocabularySetData format
function convertToPublicVocabularyWord(wordData) {
  return {
    word: wordData.word,
    meaning: wordData.translation,
    pronunciation: wordData.pronunciation,
    example: wordData.example,
  };
}

// Function to convert set data to PublicVocabularySetMeta format
function convertToPublicVocabularySetMeta(setData) {
  return {
    name: setData.name,
    wordLanguage: setData.wordLanguage,
    meaningLanguage: setData.meaningLanguage,
    wordCount: setData.words.length,
    createdAt: setData.createdAt,
  };
}

async function uploadEmotionsPreset() {
  try {
    console.log('Starting to upload Emotions preset to Firebase...');

    // Convert set data to PublicVocabularySetMeta format
    const setMeta = convertToPublicVocabularySetMeta(emotionsPreset);

    // Convert words to PublicVocabularySetData format
    const words = emotionsPreset.words.map(convertToPublicVocabularyWord);

    // Create the complete PublicVocabularySetData structure
    const publicSetData = {
      set: setMeta,
      words: words,
      publisherId: 'system', // System-generated preset
      publisherName: 'BeeVocab Team',
      publishedAt: new Date().toISOString(),
    };

    // Add the complete set with words to Firestore
    const setDocRef = await addDoc(
      collection(db, 'publicVocabularySets'),
      publicSetData
    );

    console.log(`‚úÖ Successfully uploaded preset "${setMeta.name}"`);
    console.log(`üìù Document ID: ${setDocRef.id}`);
    console.log(`üìö Total words: ${words.length}`);
    console.log(
      `üåê Language: ${setMeta.wordLanguage} ‚Üí ${setMeta.meaningLanguage}`
    );

    console.log('\nüìã Preset Details:');
    console.log(`   Name: ${setMeta.name}`);
    console.log(`   Description: ${emotionsPreset.description}`);
    console.log(`   Word Count: ${setMeta.wordCount}`);
    console.log(`   Created: ${setMeta.createdAt}`);
    console.log(`   Published: ${publicSetData.publishedAt}`);

    console.log('\nüéâ Emotions preset uploaded successfully!');
    console.log(
      'Users can now import this preset from the Import Preset dialog.'
    );

    process.exit(0);
  } catch (error) {
    console.error('‚ùå Error uploading preset to Firebase:', error);
    process.exit(1);
  }
}

uploadEmotionsPreset();

