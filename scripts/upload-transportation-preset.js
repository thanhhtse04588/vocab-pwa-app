// Script to upload Transportation vocabulary preset to Firebase
import { initializeApp } from 'firebase/app';
import { getFirestore, collection, addDoc } from 'firebase/firestore';

const firebaseConfig = {
  apiKey: 'AIzaSyBua6fbO18kF-HlRADcuXwSPOz_OAQTLGg',
  authDomain: 'bee-vocab.firebaseapp.com',
  projectId: 'bee-vocab',
  storageBucket: 'bee-vocab.firebasestorage.app',
  messagingSenderId: '946342810871',
  appId: '1:946342810871:web:a8e12034bae521e05c6ff2',
  measurementId: 'G-9HG6TBJ8X8',
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// Transportation vocabulary preset data
const transportationPreset = {
  id: 'transportation-oxford-013',
  name: '[The3000Oxford]-13.Transportation',
  description: 'Essential vocabulary for transportation and travel',
  wordLanguage: 'en',
  meaningLanguage: 'vi',
  createdAt: new Date().toISOString(),
  isActive: true,
  words: [
    { word: 'car', translation: '√¥ t√¥', pronunciation: '/k…ëÀêr/', example: '' },
    {
      word: 'bus',
      translation: 'xe bu√Ωt',
      pronunciation: '/b ås/',
      example: '',
    },
    {
      word: 'train',
      translation: 't√†u h·ªèa',
      pronunciation: '/tre…™n/',
      example: '',
    },
    {
      word: 'plane',
      translation: 'm√°y bay',
      pronunciation: '/ple…™n/',
      example: '',
    },
    {
      word: 'airplane',
      translation: 'm√°y bay',
      pronunciation: '/Ààerple…™n/',
      example: '',
    },
    {
      word: 'ship',
      translation: 't√†u th·ªßy',
      pronunciation: '/ É…™p/',
      example: '',
    },
    {
      word: 'boat',
      translation: 'thuy·ªÅn',
      pronunciation: '/bo ät/',
      example: '',
    },
    {
      word: 'bicycle',
      translation: 'xe ƒë·∫°p',
      pronunciation: '/Ààba…™s…ôk…ôl/',
      example: '',
    },
    {
      word: 'bike',
      translation: 'xe ƒë·∫°p',
      pronunciation: '/ba…™k/',
      example: '',
    },
    {
      word: 'motorcycle',
      translation: 'xe m√°y',
      pronunciation: '/Ààmo ät…ôrsa…™k…ôl/',
      example: '',
    },
    {
      word: 'taxi',
      translation: 'taxi',
      pronunciation: '/Ààt√¶ksi/',
      example: '',
    },
    {
      word: 'truck',
      translation: 'xe t·∫£i',
      pronunciation: '/tr åk/',
      example: '',
    },
    {
      word: 'van',
      translation: 'xe t·∫£i nh·ªè',
      pronunciation: '/v√¶n/',
      example: '',
    },
    {
      word: 'subway',
      translation: 't√†u ƒëi·ªán ng·∫ßm',
      pronunciation: '/Ààs åbwe…™/',
      example: '',
    },
    {
      word: 'metro',
      translation: 't√†u ƒëi·ªán ng·∫ßm',
      pronunciation: '/Ààmetro ä/',
      example: '',
    },
    {
      word: 'helicopter',
      translation: 'tr·ª±c thƒÉng',
      pronunciation: '/Ààhel…™k…ëÀêpt…ôr/',
      example: '',
    },
    {
      word: 'rocket',
      translation: 't√™n l·ª≠a',
      pronunciation: '/Ààr…ëÀêk…ôt/',
      example: '',
    },
    {
      word: 'driver',
      translation: 't√†i x·∫ø',
      pronunciation: '/Ààdra…™v…ôr/',
      example: '',
    },
    {
      word: 'passenger',
      translation: 'h√†nh kh√°ch',
      pronunciation: '/Ààp√¶s…ônd í…ôr/',
      example: '',
    },
    {
      word: 'ticket',
      translation: 'v√©',
      pronunciation: '/Ààt…™k…ôt/',
      example: '',
    },
    {
      word: 'station',
      translation: 'ga',
      pronunciation: '/Ààste…™ É…ôn/',
      example: '',
    },
    {
      word: 'airport',
      translation: 's√¢n bay',
      pronunciation: '/Ààerp…îÀêrt/',
      example: '',
    },
    {
      word: 'port',
      translation: 'c·∫£ng',
      pronunciation: '/p…îÀêrt/',
      example: '',
    },
    {
      word: 'road',
      translation: 'ƒë∆∞·ªùng',
      pronunciation: '/ro äd/',
      example: '',
    },
    {
      word: 'street',
      translation: 'ph·ªë',
      pronunciation: '/striÀêt/',
      example: '',
    },
  ],
};

// Function to convert word data to PublicVocabularySetData format
function convertToPublicVocabularyWord(wordData) {
  return {
    word: wordData.word,
    meaning: wordData.translation,
    pronunciation: wordData.pronunciation,
    example: wordData.example,
  };
}

// Function to convert set data to PublicVocabularySetMeta format
function convertToPublicVocabularySetMeta(setData) {
  return {
    name: setData.name,
    wordLanguage: setData.wordLanguage,
    meaningLanguage: setData.meaningLanguage,
    wordCount: setData.words.length,
    createdAt: setData.createdAt,
  };
}

async function uploadTransportationPreset() {
  try {
    console.log('Starting to upload Transportation preset to Firebase...');

    const setMeta = convertToPublicVocabularySetMeta(transportationPreset);
    const words = transportationPreset.words.map(convertToPublicVocabularyWord);

    const publicSetData = {
      set: setMeta,
      words: words,
      publisherId: 'system',
      publisherName: 'BeeVocab Team',
      publishedAt: new Date().toISOString(),
    };

    const setDocRef = await addDoc(
      collection(db, 'publicVocabularySets'),
      publicSetData
    );

    console.log(`‚úÖ Successfully uploaded preset "${setMeta.name}"`);
    console.log(`üìù Document ID: ${setDocRef.id}`);
    console.log(`üìö Total words: ${words.length}`);

    process.exit(0);
  } catch (error) {
    console.error('‚ùå Error uploading preset to Firebase:', error);
    process.exit(1);
  }
}

uploadTransportationPreset();

